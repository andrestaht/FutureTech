<?xml version="1.0" encoding="UTF-8"?>
<project basedir="." name="FT Salessystem" default="build">

	<!-- Definitions of variables used during the rest of this script -->

	<property file="build.properties" />
	<property name="build.dir" value="${basedir}/build" />
	<property name="build.classes.dir" value="${build.dir}/classes" />
	<property name="src.dir" value="${basedir}/src" />
	<property name="dist.dir" value="${build.classes.dir}/jar" />
	<property name="conf.dir" value="${basedir}/conf" />
	<property name="lib.dir" value="${basedir}/lib" />
	<property name="doc.dir" value="${build.dir}/doc" />
	<property name="test.reports.dir" value="${build.dir}/reports/" />
	<property name="version.properties" value="${conf.dir}/version.properties" />
	
	<!-- Definitions of classpath variants used for different tasks -->

	<path id="compile.classpath">
		<fileset dir="lib">
			<include name="*.jar" />
		</fileset>
	</path>

	<path id="test.classpath">
		<pathelement location="${build.classes.dir}" />
		<!-- configuration -->
		<pathelement location="${conf.dir}" />
		<fileset dir="lib">
			<include name="*.jar" />
		</fileset>
	</path>

	<!-- Definitions of runnable ant targets. Run them from the command line 
		by executing "ant [targetname]" -->
	<target name="dist" depends="build" description="Make a project jar file" >
		<antcall target="revision"></antcall>
		<mkdir dir="${dist.dir}"/>

		<!-- copy libraries to dist -->
		<copy todir="${dist.dir}">
			<fileset dir="." includes="lib/*.jar conf/*.properties etc/" />
		</copy>
		<jar destfile="${dist.dir}/FutureTech.jar" basedir="${build.classes.dir}"> 
			<!-- includes="${conf.dir}/**,${basedir}/etc/**,${lib.dir}/** "-->
			<manifest>
				<attribute name="Main-Class" value="ee.ut.math.tvt.FutureTech.Intro"/>
				<attribute name="Class-Path" value=". lib/log4j-1.2.17.jar lib/miglayout-4.0.jar lib/jgoodies-looks-2.5.3.jar lib/jgoodies-common-1.4.0.jar ./conf/"/>
			</manifest>
		</jar>
	</target>

	<target name="revision" description="Increases revision number by one">
		<propertyfile file="${version.properties}">
			<entry key="build.revision.number" type="int" operation="+" value="1" pattern="00" />
		</propertyfile>

		<property file="${version.properties}"/>

		<propertyfile file="${version.properties}">
			<entry key="build.number" value="${build.major.number}.${build.minor.number}.${build.revision.number}" />
		</propertyfile>
	</target>

	<target name="jrun" depends="dist" description="Runs the jar file">
		<java jar="${dist.dir}/FutureTech.jar" fork="true"/> 
	</target>

	<target name="run" depends="build" description="Run the template application">
		<java classname="ee.ut.math.tvt.FutureTech.Intro" classpathref="test.classpath" fork="yes">
			<jvmarg value="-Xdebug" />
			<jvmarg value="-Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=1044" />
		</java>
	</target>

	<target name="runc" depends="build" description="Run the application (console)">
		<java classname="ee.ut.math.tvt.FutureTech.Intro" classpathref="test.classpath" fork="yes">
			<arg value="console" />
		</java>
	</target>

	<target name="build" depends="clean" description="Build the system">
		<mkdir dir="${build.dir}" />
		<mkdir dir="${build.classes.dir}" />
		<javac srcdir="${src.dir}" destdir="${build.classes.dir}" debug="true"
			debuglevel="lines,vars,source" encoding="utf-8" compiler="modern"
			target="1.7" source="1.7" includeantruntime="false">
			<classpath refid="compile.classpath" />
		</javac>
	</target>

	<!-- Build internal documentation -->
	<target name="javadoc" description="Build internal documentation">
		<mkdir dir="${doc.dir}" />
		<javadoc destdir="${doc.dir}" classpathref="compile.classpath">
			<fileset dir="${src.dir}" includes="**/*.java" />
		</javadoc>
	</target>

	<!-- Clean up build system results -->
	<target name="clean" description="Clean up build system results">
		<delete dir="${build.dir}" />
	</target>

	<!-- Git commands -->

	<macrodef name="git">
		<attribute name="command" />
		<attribute name="dir" default="" />
		<element name="args" optional="true" />
		
		<sequential>
			<echo message="git @{command}" />
			<exec executable="git" dir="@{dir}">
				<arg value="@{command}" />
				<args/>
			</exec>
		</sequential>
	</macrodef>

	<target name="git_commit" description="Commits all changes to version git">
		<input message="Commit message" addproperty="commit-message" />
		<echo message="Commiting all changes with message ${commit-message}" />
		
		<git command="add">
			<args>
				<arg value="-A" />
			</args>
		</git>
		<git command="commit">
			<args>
				<arg value="-m ${commit-message}" />
			</args>
		</git>
		<git command="push" />
	</target>

	<target name="git_tag" description="Makes new tag">
		<input message="Tag name" addproperty="tag-name" />
		<input message="Comment" addproperty="tag-comment" />
		<echo message="Tag called ${tag-name} made" />

		<git command="tag">
			<args>
				<arg value="-a" />
				<arg value="${tag-name}" />
				<arg value="-m" />
				<arg value="${tag-comment}" />
			</args>
		</git>
		<git command="push">
			<args>
				<arg value="--tags" />
			</args>
		</git>
	</target>
	
</project>